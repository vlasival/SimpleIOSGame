import SwiftUI

// MARK: - Action Buttons View
// –ü–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫–∞
// –°–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ –∞—Ç–∞–∫–∏ –∏ –∏—Å—Ü–µ–ª–µ–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞—Ç–∞–∫–æ–π –º–æ–Ω—Å—Ç—Ä–∞
struct ActionButtonsView: View {
    let gameManager: GameManager
    let onError: (String) -> Void
    
    var body: some View {
        VStack(spacing: 12) {
            // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
            HStack(spacing: 12) {
                // –ö–Ω–æ–ø–∫–∞ –∞—Ç–∞–∫–∏
                ActionButton(
                    title: "‚öîÔ∏è –ê—Ç–∞–∫–æ–≤–∞—Ç—å",
                    color: .red,
                    isEnabled: gameManager.canPlayerAct
                ) {
                    performPlayerAttack()
                }
                
                // –ö–Ω–æ–ø–∫–∞ –∏—Å—Ü–µ–ª–µ–Ω–∏—è
                ActionButton(
                    title: "üíö –ò—Å—Ü–µ–ª–∏—Ç—å—Å—è",
                    color: .green,
                    isEnabled: gameManager.canPlayerAct && gameManager.player?.canHeal == true
                ) {
                    performPlayerHeal()
                }
            }
        }
    }
    
    // MARK: - Action Methods
    // –ú–µ—Ç–æ–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫–∞
    
    private func performPlayerAttack() {
        do {
            try gameManager.playerAttack()
            DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
                if gameManager.canMonsterAct {
                    performMonsterAttack()
                }
            }
        } catch {
            onError(error.localizedDescription)
        }
    }
    
    private func performPlayerHeal() {
        do {
            try gameManager.playerHeal()
            DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
                if gameManager.canMonsterAct {
                    performMonsterAttack()
                }
            }
        } catch {
            onError(error.localizedDescription)
        }
    }
    
    private func performMonsterAttack() {
        do {
            try gameManager.monsterAttack()
        } catch {
            onError(error.localizedDescription)
        }
    }
}

// MARK: - Preview
// –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
#Preview {
    ActionButtonsView(gameManager: GameManager()) { error in
        print("Error: \(error)")
    }
    .padding()
}
